# LIBRARIESfrom modules import config_mod# GUI librariesimport tkinter as tkimport openpyxlimport pathlib# save selected talliesdef save_to_xlsx(sel_tally):        config_mod.plot_settings["export_dir_path"] = pathlib.Path(tk.filedialog.askdirectory(title='Choose directory for export file', initialdir=config_mod.plot_settings["export_dir_path"]))        # create new directory if doesn't exist    """    result_path = config_mod.plot_settings["work_dir_path"] / 'export'    result_path.mkdir(parents=True, exist_ok=True)    """        # ask xlsx file name    filename = tk.simpledialog.askstring(title='Export to XLSX', prompt='Choose a name for export without extension:')    wb = openpyxl.Workbook()    del wb['Sheet']        # create new sheets    for tally in sel_tally:        # solve problem with too long output+tally names        if len(tally) > 31:            tk.messagebox.showerror('Output error', 'XLSX sheet name has 31 characters limit. Tally name was modified, the first characters were deleted to prevent duplicity in naming.')            tally_m = tally[len(tally)-31:]        else:            tally_m = tally                wb.create_sheet(tally_m)        wb[tally_m].append(['Filename', tally])        wb[tally_m].append(['Tally number', config_mod.tallies[tally][0]])        wb[tally_m].append(['Tally type', config_mod.tallies[tally][1]])        wb[tally_m].append(['Tally particle', config_mod.tallies[tally][2]])        wb[tally_m].append(['Comment', config_mod.tallies[tally][8]])                wb[tally_m].append(['energy', 'flux', 'flux normalized per 1 MeV','error'])        for i in range(0, len(config_mod.tallies[tally][3])):            wb[tally_m].append((config_mod.tallies[tally][3][i], config_mod.tallies[tally][4][i], config_mod.tallies[tally][7][i], config_mod.tallies[tally][5][i]))    wb.save(filename= str(config_mod.plot_settings["export_dir_path"] / pathlib.Path(filename)) + '.xlsx')    #tk.messagebox.showinfo(title='Export to XLSX', message='Tally export has been completed.')